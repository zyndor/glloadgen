<?xml version="1.0" encoding="UTF-8"?>
<?oxygen RNGSchema="http://docbook.org/xml/5.0/rng/docbookxi.rng" type="xml"?>
<?oxygen SCHSchema="http://docbook.org/xml/5.0/rng/docbookxi.rng"?>
<article xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude"
    xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0">
    <title>Style Pointer C</title>
    <para>The <literal>pointer_c</literal> style is the default style. It is also the one that most
        mimics the way common OpenGL loaders work. This style generates a <filename>.h</filename>
        and <filename>.c</filename> file. The header file can be included by C and C++; the source
        file should be compiled as C.</para>
    <para>Since these are compatible with C, all of the typedefs, enumerations, extension variables,
        and function pointers are global. The extension variables are of type
        <literal>int</literal>. Enumerations are <literal>#define</literal>s. The functions are
        function pointers with mangled names that have been <literal>#define</literal>d into the
        real OpenGL function name. The latter is done to avoid name conflicts with static linking of
        certain core OpenGL function names.</para>
    <para>The loading function that loads the extensions and OpenGL version is called
            <literal>LoadFunction</literal>, prefixed by a specification-specific prefix. The return
        value of this function, as well as the value stored in the extension variables, is special.
        There is an enumeration, prefixed again by the spec-specific prefix.</para>
    <para>If the value is <literal>LOAD_FAILED</literal>, then the extension was not found in the
        extension string, so no attempt was made to load it. If the value is
            <literal>LOAD_SUCCEEDED</literal>, then the extension was loaded in its entirety (all
        function pointers accounted for). Otherwise, some number of function pointers failed to
        load. To get the number of functions that failed to load for the extension, take the integer
        value and subtract <literal>LOAD_SUCCEEDED</literal> from it.</para>
    <para>The return value for the function loader works the same way. It refers to the success or
        failure to load the core functions (obviously for WGL/GLX, there are no core functions, so
        it will always be successful). The attempt will always be made to load the core functions,
        so <literal>LOAD_FAILED</literal> is not a possibility.</para>
    <para>Also, this style will generate functions to query version availability for core OpenGL. </para>
    <section>
        <title>Compatibility</title>
        <para>This style is intended to be maximally compatible with regular OpenGL programs. You
            should be able to take this header and include it into a standard GL program and use it
            as is. Furthermore, it should be compatible with other systems like FreeGLUT, GLFW, and
            so forth, as it provides information in the way that traditional OpenGL headers
            do.</para>
        <para>However, in all cases, you should include these generated headers
                <emphasis>before</emphasis> anything from FreeGLUT, GLFW, etc.</para>
    </section>
</article>
